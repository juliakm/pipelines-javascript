# trigger: none

# strategy:
#   matrix:
#     windows:
#       OS_PLAT: windows
#       IMAGE: windows-latest
#     windows-core:
#       OS_PLAT: windows
#       IMAGE: windows-latest
#       USE_PSCORE: true
#     linux:
#       OS_PLAT: linux
#       IMAGE: ubuntu-latest
#       USE_PSCORE: true

# pool:
#   vmImage: $[ variables.IMAGE ]

# steps:
# - template: shared-steps.yml



# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# resources:
#  packages:
#    - package: npmpackage
#      type: npm
#      endpoint: my-npm-connection
#      name: juliakm/tiny


trigger: none

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: A
  jobs:
  - job: A1
    steps:
     - script: echo "##vso[task.setvariable variable=skipsubsequent;isOutput=true]false"
       name: printvar

- stage: B
  condition: and(succeeded(), ne(dependencies.A.A1.outputs['printvar.skipsubsequent'], 'true'))
  dependsOn: A
  jobs:
  - job: B1
    steps:
    - script: echo hello from Stage B

# jobs:
# - job:
#   variables:
#     a: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 100)]
#     b: $[pipeline.startTime]
#     c: $(pipeline.startTime)
#     d: $(system.pipelineStartTime)
#     #e: $[counter(format('{0:yyyyMMdd}', system.pipelineStartTime), 100)] 

#   steps:
#   - bash: echo $(a) #outputs 102
#   - bash: echo $(b) #outputs 2020-05-11 16:36:13-05:00
#   - script: echo $(c) #outputs echo $(pipeline.startTime)
#   - script: echo $(d) #outputs 2020-05-11 16:36:13-05:00
#   #- script: echo $(e) #error!
#   - script: echo $(pipeline.startTime) #outputs echo $(pipeline.startTime) # throws error
#   - script: echo $(system.pipelineStartTime) #outputs 2020-05-11 16:36:13-05:00