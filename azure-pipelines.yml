variables:
- name: myJob
  value: MyJob

jobs:
- job: ${{ variables.jobName }}  #Error: Job $(jobName) has an invalid name. Valid names may only contain alphanumeric characters and '_' and may not start with a number.
  steps:
  - script: echo 'fred'

##[group]Beginning of a group
##[warning]Warning message
##[error]Error message
##[debug]Debug text
##[command]Command-line being run
##[endgroup]

# trigger:
# - master

# stages:
# - stage: A
#   jobs:
#   - job: A1
#     steps:
#      - bash: echo "##vso[task.setvariable variable=shouldrun;isOutput=true]true"
#        name: printvar

# - stage: B
#   condition: and(succeeded(), eq(dependencies.A.outputs['A1.printvar.shouldrun'], 'true'))
#   dependsOn: A
#   jobs:
#   - job: B1
#     steps:
#     - script: echo hello from Stage B
#     - script: echo $[dependencies.A.outputs['A1.printvar.shouldrun']]


# variables:
# - name: testNull
#   value: ''

# jobs:
#   - job: A
#     steps:
#     - script: echo testNull is blank
#     condition: eq('${{ variables.testNull }}', '')

# - task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'

# - script: |
#     npm install
#     npm run build
#   displayName: 'npm install and build'

# - task: CopyFiles@2
#   inputs:
#     Contents: 'dist/**' 
#     TargetFolder: '$(Build.ArtifactStagingDirectory)'

# - task: PublishBuildArtifacts@1
#   inputs: 
#     pathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
#     ArtifactName: 'www' # output artifact named www